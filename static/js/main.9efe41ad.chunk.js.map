{"version":3,"sources":["logo.svg","components/Job.js","components/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["Job","props","state","tags","role","className","src","logo","style","display","justifyContent","margin","padding","fontStyle","backgroundColor","color","borderRadius","this","overflow","textOverflow","whiteSpace","map","tag","Component","Layout","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAAe,MAA0B,iC,OCuE1BA,E,kDAlEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAMF,EAAME,KACZC,KAAMH,EAAMG,MAJG,E,0CAOnB,WACE,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAKC,IAAKC,EAAMF,UAAU,gBAC1B,sBAAKA,UAAU,kBAAf,UACE,8CACA,8EAEF,sBACEG,MAAO,CACLC,QAAS,OACTC,eAAgB,gBAChBC,OAAQ,QAJZ,UAOE,mBAAGH,MAAO,CAAEI,QAAS,OAAQC,UAAW,UAAxC,gCAGA,mBACEL,MAAO,CACLI,QAAS,OACTE,gBAAiB,cACjBC,MAAO,YACPC,aAAc,QALlB,SAQGC,KAAKf,MAAME,UAGhB,qBACEC,UAAU,WACVG,MAAO,CACLU,SAAU,SACVC,aAAc,WACdC,WAAY,SACZT,OAAQ,QANZ,SASGM,KAAKf,MAAMC,KAAKkB,KAAI,SAACC,GACpB,OACE,sBACEd,MAAO,CACLI,QAAS,UACTE,gBAAiB,QACjBH,OAAQ,MACRF,QAAS,eACTO,aAAc,OANlB,SASGM,gB,GAzDCC,aCwCHC,G,kKArCb,WACE,OACE,sBAAKC,GAAG,iBAAR,UACE,cAAC,EAAD,CACEtB,KAAM,CACJ,aACA,UACA,QACA,SACA,OACA,MACA,WAEFC,KAAM,WAER,cAAC,EAAD,CACED,KAAM,CAAC,MAAO,UAAW,OAAQ,OAAQ,OAAQ,MAAO,WACxDC,KAAM,cAGR,cAAC,EAAD,CACED,KAAM,CACJ,QACA,MACA,UACA,OACA,QACA,QACA,WAEFC,KAAM,mB,GA/BKmB,cCCNG,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9efe41ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\r\n\r\nimport logo from \"../logo.svg\";\r\n\r\nclass Job extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tags: props.tags,\r\n      role: props.role,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"listing\">\r\n        <img src={logo} className=\"listing-img\"></img>\r\n        <div className=\"listing-details\">\r\n          <p>Dummy Company</p>\r\n          <h2>Placeholder Position (Imaginary Position)</h2>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            margin: \"15px\",\r\n          }}\r\n        >\r\n          <p style={{ padding: \"10px\", fontStyle: \"italic\" }}>\r\n            about 15 hours ago\r\n          </p>\r\n          <p\r\n            style={{\r\n              padding: \"10px\",\r\n              backgroundColor: \"greenyellow\",\r\n              color: \"darkgreen\",\r\n              borderRadius: \"15px\",\r\n            }}\r\n          >\r\n            {this.state.role}\r\n          </p>\r\n        </div>\r\n        <div\r\n          className=\"taggings\"\r\n          style={{\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n            whiteSpace: \"nowrap\",\r\n            margin: \"25px\",\r\n          }}\r\n        >\r\n          {this.state.tags.map((tag) => {\r\n            return (\r\n              <span\r\n                style={{\r\n                  padding: \"5px 7px\",\r\n                  backgroundColor: \"wheat\",\r\n                  margin: \"9px\",\r\n                  display: \"inline-block\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                {tag}\r\n              </span>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Job;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Job from \"./Job\";\r\n\r\nimport \"./Layout.css\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"flex-container\">\r\n        <Job\r\n          tags={[\r\n            \"JavaScript\",\r\n            \"ReactJS\",\r\n            \"MySQL\",\r\n            \"Python\",\r\n            \"Java\",\r\n            \"OOP\",\r\n            \"Node.JS\",\r\n          ]}\r\n          role={\"Mobile\"}\r\n        ></Job>\r\n        <Job\r\n          tags={[\"AWS\", \"Flutter\", \"Dart\", \"Ruby\", \"Java\", \"OOP\", \"Node.JS\"]}\r\n          role={\"Fullstack\"}\r\n        ></Job>\r\n\r\n        <Job\r\n          tags={[\r\n            \"Swift\",\r\n            \"SQL\",\r\n            \"MongoDB\",\r\n            \"Java\",\r\n            \"Scrum\",\r\n            \"Agile\",\r\n            \"Node.JS\",\r\n          ]}\r\n          role={\"Backend\"}\r\n        ></Job>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import \"./App.css\";\r\nimport Layout from \"./components/Layout\";\r\n\r\nfunction App() {\r\n  return <Layout></Layout>;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}